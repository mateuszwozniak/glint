#!/usr/bin/env node

'use strict';

var path = require('path');
var program = require('commander');
var package_data = require('../package.json');
var Glint = require('../src/Glint');


program
    .version(package_data.version)
    .option('-c, --config <path>', 'path to config file', String)
    .option('-w, --watch', 'watch for file changes', Boolean)
    .option('-d, --dev', 'use development mode - do not merge and process files', Boolean);

program.parse(process.argv);
var config = initConfig();
var glint = new Glint(config);
glint.run();

function initConfig() {
    var config;
    if (!program.config) {
        console.error('[ERROR] Can not start without config file!');
        process.exit(-1);
    }

    var absConfigPath = path.normalize(path.join(process.cwd(), program.config));
    try {
        config = require(absConfigPath);
    } catch (ex) {
        console.log('[ERROR] Can not open config file: ', configPath);
        process.exit(-1);
    }

    var configDir = path.dirname(absConfigPath);
    var outputPath = path.join(configDir, config.outputDir);
    config.outputDir = path.normalize(outputPath);
    config.baseDir = configDir;

    var assetsPath = path.join(configDir, config.assetsDir);
    config.assetsDir = path.normalize(assetsPath);

    config.watch = program.watch;
    config.dev = program.dev;

    config.preprocessors = config.preprocessors || {};
    config.postprocessors = config.postprocessors || {};

    return config;
}
